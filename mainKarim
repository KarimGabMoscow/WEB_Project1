import logging
import datetime
from telegram.ext import Application, MessageHandler, ConversationHandler, filters
from telegram.ext import CommandHandler
from telegram import ReplyKeyboardMarkup
from random import randint

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

name = ""
spis_vyz = ["–ú–ì–£", "–ú–§–¢–ò", "–ú–ò–§–ò", "–í–®–≠"]
spis_olymp = ["–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤"]
reply_keyboard_MAIN = [['/spic_VYZ', '/spic_olymp', '/info'],
                       ['/set_olymp', '/change_VYZ', '/change_delta'],
                       ['/help', '/start', '/stop']]

#reply_keyboard_SECOND = ['/spic_VYZ', '/spic_olymp']

markup1 = ReplyKeyboardMarkup(reply_keyboard_MAIN, one_time_keyboard=False)
#markup2 = ReplyKeyboardMarkup(reply_keyboard_SECOND, one_time_keyboard=False)


async def start(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    user = update.effective_user
    await update.message.reply_html(
        rf"""–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –í–£–ó –≤ –ú–æ—Å–∫–≤–µ. –ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –ø–∞–Ω–µ–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ: 
            1) –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –í–£–ó–∞—Ö –ú–æ—Å–∫–≤—ã
            2) –í—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –∏ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã 
                –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–µ–≥–æ
            3) –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–∏—á–Ω—ã–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –æ–ª–∏–º–ø–∏–∞–¥""", reply_markup=markup1)


async def _help_(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf"""–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –í–£–ó –≤ –ú–æ—Å–∫–≤–µ. –ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –ø–∞–Ω–µ–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ: 
        1) –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –í–£–ó–∞—Ö –ú–æ—Å–∫–≤—ã
        2) –í—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –∏ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã 
            –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–µ–≥–æ
        3) –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–∏—á–Ω—ã–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –æ–ª–∏–º–ø–∏–∞–¥""", reply_markup=markup1)


async def help_CHANGE(update, context):
    await update.message.reply_html(
        rf"""üìö –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤—É–∑: /set_VYZ

        –ü–æ–º–Ω–∏—Ç–µ - –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä –º–æ–∂–Ω–æ –≤—Å–µ–≥–¥–∞!

        –¢–∞–∫–∂–µ –º—ã —Å–æ–±—Ä–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –í–£–ó–æ–≤ –ú–æ—Å–∫–≤—ã,
         –∫–æ—Ç–æ—Ä—ã–π –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /spic_VYZ! üéì""")


async def help_SPIC(update, context):
    await update.message.reply_html(
        rf"""üè´ –ü–æ –∫–æ–º–∞–Ω–¥–µ /spic_VYZ –í—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –í–£–ó–æ–≤ –ú–æ—Å–∫–≤—ã, –≤ –±—É–¥—É—â–µ–º —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö.

üë®‚Äçüéì –ê –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ /spic_OLYMP –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥""")


async def help_INF(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf'''üö© {user.mention_html()}, —ç—Ç–æ –í–∞—à–µ –ª–∏—á–Ω–æ–µ –õ–æ–±–±–∏, –≥–¥–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –æ –ª–∏—á–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö, –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤—É–∑–µ, –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –Ω–∏–∫ –∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –º–µ–∂–¥—É "–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞–º–∏"''')


async def help_SET(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf'''‚åõ –ö–æ–º–∞–Ω–¥—ã /set_OLYMP –∏ /change_DELTA

–ü–æ–º–æ–≥–∞—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤–Ω–µ—É—Ä–æ—á–Ω—É—é –æ–ª–∏–º–ø–∏–∞–¥—É –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –Ω–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –º–µ–∂–¥—É "–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞–º–∏"''')


async def stop(update, context):
    await update.message.reply_html("–°–ø–∞—Å–∏–±–æ")


async def _main_(update, context):
    pass


async def set_OLYMP(update, context):
    pass


async def set_VYZ(update, context):
    pass


async def change_VYZ(update, context):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –≤—É–∑, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—É–ø–∏—Ç—å")
    return 1


async def change_VYZ_2(update, context):
    vyz = update.message.text
    if vyz in spis_vyz:
        # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—É–∑–∞ –≤ –ë–î
        await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –ø–æ—Å—Ç—É–ø–∏—Ç—å? –ù–∞–∂–º–∏ /spic_OLYMP")

    else:
        await update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞—à –±–æ—Ç –Ω–µ –∑–Ω–∞–µ—Ç –æ —Ç–∞–∫–æ–º –≤—É–∑–µ. –ü–æ—Å–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –Ω–∞–∂–∞–≤ –Ω–∞ /spic_VYZ. ")
    return ConversationHandler.END


async def change_DELTA(update, context):
    pass


async def change_NAME(update, context):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏")
    return 1


async def change_NAME_2(update, context):
    name = update.message.text
    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –≤ –ë–î
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å —Ç–≤–æ–µ –∏–º—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ " + name)
    return ConversationHandler.END


async def spic_VYZ(update, context):
    await update.message.reply_text("–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ:\n" + "\n".join(spis_vyz))


async def spic_OLYMP(update, context):
    await update.message.reply_text("–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ:\n" + "\n".join(spis_olymp))


async def info(update, context):
    await update.message.reply_text(name)


def main():
    application = Application.builder().token("6088085766:AAE-IHzfawY9uGDaldMeIw_JCtrsCBPJZaM").build()
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
    application.add_handler(CommandHandler("help", _help_))
    application.add_handler(CommandHandler("help_CHANGE", help_CHANGE))
    application.add_handler(CommandHandler("help_SPIC", help_SPIC))
    application.add_handler(CommandHandler("help_INF", help_INF))
    application.add_handler(CommandHandler("help_SET", help_SET))

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("stop", stop))
    application.add_handler(CommandHandler("main", _main_))

    application.add_handler(CommandHandler("set_OLYMP", set_OLYMP))
    application.add_handler(CommandHandler("set_VYZ", set_VYZ))

    application.add_handler(CommandHandler("change_DELTA", change_DELTA))

    application.add_handler(CommandHandler("spic_VYZ", spic_VYZ))
    application.add_handler(CommandHandler("spic_OLYMP", spic_OLYMP))

    application.add_handler(CommandHandler("info", info))

    conv1 = ConversationHandler(
        entry_points=[CommandHandler('change_NAME', change_NAME)],
        states={
            # –§—É–Ω–∫—Ü–∏—è —á–∏—Ç–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –∑–∞–¥–∞—ë—Ç –≤—Ç–æ—Ä–æ–π.
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, change_NAME_2)]
        },
        fallbacks=[CommandHandler('stop', stop)]
    )

    application.add_handler(conv1)

    conv2 = ConversationHandler(
        entry_points=[CommandHandler('change_VYZ', change_VYZ)],
        states={
            # –§—É–Ω–∫—Ü–∏—è —á–∏—Ç–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –∑–∞–¥–∞—ë—Ç –≤—Ç–æ—Ä–æ–π.
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, change_VYZ_2)],
            2: [MessageHandler(filters.TEXT & ~filters.COMMAND, change_VYZ)]
        },
        fallbacks=[CommandHandler('stop', stop)]
    )

    application.add_handler(conv2)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    main()
